{
    "name": "discord-interface-mcp",
    "module": "index.ts",
    "type": "module",
    "bin": {
        "discord-interface-mcp": "dist/cli.js"
    },
    "files": [
        "dist/"
    ],
    "scripts": {
        "dev": "bun run --watch src/index.ts",
        "build": "bun build src/index.ts --outfile=dist/index.js --target=node && bun build src/cli.js --outfile=dist/cli.js --target=node && node scripts/add-shebang.cjs",
        "start": "bun run dist/index.js",
        "test": "bun test",
        "test:watch": "bun test --watch",
        "lint": "eslint src/**/*.{ts,js} tests/**/*.ts",
        "lint:fix": "eslint src/**/*.{ts,js} tests/**/*.ts --fix",
        "format": "prettier --write src/**/*.{ts,js} tests/**/*.ts",
        "format:check": "prettier --check src/**/*.{ts,js} tests/**/*.ts",
        "typecheck": "tsc --noEmit",
        "prepare": "husky"
    },
    "description": "Model Context Protocol server that provides Discord as an interface for AI assistants",
    "version": "2.2.1",
    "author": "RateteDev (https://github.com/RateteDev)",
    "license": "GPL-3.0",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/RateteDev/discord-interface-mcp.git"
    },
    "keywords": [
        "discord",
        "mcp",
        "model-context-protocol",
        "ai",
        "claude"
    ],
    "devDependencies": {
        "@eslint/js": "^9.32.0",
        "@types/bun": "^1.2.11",
        "@typescript-eslint/eslint-plugin": "^8.38.0",
        "@typescript-eslint/parser": "^8.38.0",
        "eslint": "^9.32.0",
        "husky": "^9.1.7",
        "lint-staged": "^16.1.2",
        "prettier": "^3.6.2"
    },
    "peerDependencies": {
        "typescript": "^5.8.3"
    },
    "dependencies": {
        "@modelcontextprotocol/sdk": "^1.17.0",
        "discord.js": "^14.21.0",
        "znv": "^0.5.0",
        "zod": "^3.24.3"
    },
    "prettier": {
        "semi": true,
        "singleQuote": true,
        "tabWidth": 4,
        "useTabs": false,
        "printWidth": 80,
        "trailingComma": "es5"
    },
    "lint-staged": {
        "*.{ts,js}": [
            "eslint --fix",
            "prettier --write"
        ]
    }
}
